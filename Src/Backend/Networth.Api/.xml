<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Networth.Api</name>
    </assembly>
    <members>
        <member name="T:Networth.Middleware.ErrorHandlingMiddleware">
            <summary>
            Middleware for handling unhandled exceptions and providing standardized error responses.
            </summary>
            <param name="next">The next middleware in the pipeline.</param>
            <param name="logger">The logger for recording exception details.</param>
            <param name="environment">The hosting environment to determine development vs production behavior.</param>
        </member>
        <member name="M:Networth.Middleware.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Networth.Middleware.ErrorHandlingMiddleware},Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            Middleware for handling unhandled exceptions and providing standardized error responses.
            </summary>
            <param name="next">The next middleware in the pipeline.</param>
            <param name="logger">The logger for recording exception details.</param>
            <param name="environment">The hosting environment to determine development vs production behavior.</param>
        </member>
        <member name="M:Networth.Middleware.ErrorHandlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware to process the HTTP request.
            </summary>
            <param name="context">The HTTP context for the current request.</param>
        </member>
        <member name="M:Networth.Middleware.ErrorHandlingMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            Handles the exception by creating and writing a standardized error response.
            </summary>
            <param name="context">The HTTP context for the current request.</param>
            <param name="exception">The exception that occurred.</param>
        </member>
        <member name="T:Networth.Middleware.ErrorHandlingMiddlewareExtensions">
            <summary>
            Extension methods for registering the ErrorHandlingMiddleware.
            </summary>
        </member>
        <member name="M:Networth.Middleware.ErrorHandlingMiddlewareExtensions.UseErrorHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the error handling middleware to the application pipeline.
            </summary>
            <param name="builder">The application builder.</param>
        </member>
        <member name="T:Networth.Models.ErrorResponse">
            <summary>
            Represents a standardized error response for API exceptions.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the error.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.Title">
            <summary>
            Gets or sets a brief, human-readable summary of the error type.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.Detail">
            <summary>
            Gets or sets a detailed explanation of the error.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.TraceId">
            <summary>
            Gets or sets the unique identifier for the request that caused this error.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.Timestamp">
            <summary>
            Gets or sets the timestamp when the error occurred.
            </summary>
        </member>
        <member name="P:Networth.Models.ErrorResponse.StackTrace">
            <summary>
            Gets or sets the stack trace of the exception.
            </summary>
        </member>
    </members>
</doc>
